<template>
<view>
  <nav-bar title="个人中心" back="{{false}}" />
  <view class="user">
    <button open-type="getUserInfo" bindgetuserinfo="getUserInfo" class="getUser">
      <image class="header" src="{{avatarUrl}}" />
    </button>
    <view class="name">Hi, Username</view>
  </view>
  <view class="list">
    <navigator url="orderList" class="item">
      <view class="label">
        <image class="link" src="https://linkstyle2.oss-cn-hangzhou.aliyuncs.com/iCON_dingdan@3x.png" mode="widthFix"/>
        订单列表
      </view>
      <image class="link" src="https://linkstyle2.oss-cn-hangzhou.aliyuncs.com/iCON_jiantoubai@3x.png" mode="widthFix"/>
    </navigator>
    <navigator url="addressList" class="item">
      <view class="label">
        <image class="link" src="https://linkstyle2.oss-cn-hangzhou.aliyuncs.com/iCON_yunsong@3x.png" mode="widthFix"/>
        地址列表
      </view>
      <image class="link" src="https://linkstyle2.oss-cn-hangzhou.aliyuncs.com/iCON_jiantoubai@3x.png" mode="widthFix"/>
    </navigator>
  </view>
</view>  
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import wxRequest from '../utils/request'
  createPage({
    data: {
      nickName: '',
      avatarUrl: ''
    },
    onLoad () {

    },
    getUserInfo: async function (res) {
      console.log(res)
      this.setData({
        nickName: res.detail.userInfo.nickName,
        avatarUrl: res.detail.userInfo.avatarUrl,
      })
      if (!wx.setStorageSync('nickname')) {
        wx.setStorageSync('nickname', res.detail.userInfo.nickName)
        wx.setStorageSync('avatarurl', res.detail.userInfo.avatarUrl)
        const json = await wxRequest(`${wx.url}/wx/user/api/login`, {
          method: 'FORM',
          query: {
            ...res.detail.userInfo,
            openId: wx.getStorageSync('openid')
          }
        })
      }
    },
  })
</script>
<style lang="less">
page {
  box-sizing: border-box;
  padding: 20rpx;
}
.user {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 40rpx 0rpx 80rpx;
  .header {
    width: 100%;
    height: 100%;
    // border: 4rpx solid rgba(255,255,255,1);
    border-radius: 50%;
   
  }
  .name {
    font-size:32rpx;
    font-family:DIN-Regular,DIN;
    font-weight:400;
    color:rgba(255,255,255,1);
  }
}

.list {
  .item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-top: 2rpx solid #FFFFFF;
    padding: 64rpx 44rpx;
    color: #FFF;
    font-size: 28rpx;
    font-family:PingFangSC-Regular,PingFang SC;
    font-weight:400;
    color:rgba(255,255,255,1);
    .label {
      display: flex;
      align-items: center;
    }
    .link {
      width: 40rpx;
      height: 40rpx;
      margin-right: 8rpx;
    }
  }
  .item:last-child {
    border-bottom: 2rpx solid #FFFFFF;
  }
}

.getUser {
  width: 128rpx;
  height: 128rpx;
  border: 4rpx solid #ffffff;
  border-radius: 50%;
  padding: 0px !important;
   margin-bottom: 28rpx;
}
.getUser::after {
  content:none
}
</style>

