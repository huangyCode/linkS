<template>
<view>
  <nav-bar title="{{shopName}}" />
  <view class="goods" style="top: {{statusBarHeight}};height: {{scrollheight}}px">
    <scroll-view scroll-y class="menu-wrapper-w"  scroll-with-animation  id="menuWrapper" scroll-into-view="box{{currentIndex}}">
      <view class="menu-wrapper">
        <view wx:for="{{list}}" wx:key="index" class="menu-item {{currentIndex===index ? 'current' : ''}}" hover-stay-time="70" bind:touchstart="onTouchStart" bind:touchend="onTouchEnd" bind:tap="selectMenu(item,index)">
          <view class="text border-1px" id="box{{index}}">
            <view class="short enName">{{item.enName}}</view>
            <view class="short">{{item.name}}</view>
          </view>
        </view>
      </view>
    </scroll-view>
    <scroll-view scroll-y scroll-with-animation class="foods-wrapper" id="foodsWrapper" scroll-into-view="{{nameId}}">
      <view wx:key="index"  class="food-list">
        <!-- <view class="title">{{item.name}}</view>
        <view> -->
          <block wx:for="{{objList}}"  wx:for-index="idx" wx:key="idx">
            <div style="color:">{{idx}} {{keyId}}</div>
            <view wx:for="{{objList[idx]}}" wx:key="index" class="food-item border-1px" style="display: {{idx == keyId ? '': 'none'}}">
              <view class="icon">
                <image lazy-load width="57" height="57" src="{{item.picUrl}}" />
              </view>
              <view class="content">
                <view class="name">{{item.name}}</view>
                <view class="desc">{{item.enName}}</view>
                <view class="price">
                  <view><text style="font-size:24rpx">￥</text>{{item.price}}</view>
                  <view class="cartcontrol-wrapper">
                    <view class="mc">
                    <image wx:if="{{item.count > 0}}" bindtap="del(index)" hover-stay-time="70" bind:touchstart="onTouchStart" bind:touchend="onTouchEnd" src="https://linkstyle2.oss-cn-hangzhou.aliyuncs.com/iCON_jian@3x.png" /></view>
                    <view class="mc"><text wx:if="{{item.count > 0}}">{{item.count}}{{item.unit}}</text></view>
                    <view class="mc"><image bindtap="add(index)" hover-stay-time="70" bind:touchstart="onTouchStart" bind:touchend="onTouchEnd"  src="https://linkstyle2.oss-cn-hangzhou.aliyuncs.com/iCON_jia@3x.png" /></view>
                  </view>
                </view>
              </view>
            </view>
          </block>  
        <!-- </view> -->
      </view>
    </scroll-view>
    <!-- <shopcart ref="shopcart" :selectFoods="selectFoods" :deliveryPrice="seller.deliveryPrice"
              :minPrice="seller.minPrice"></shopcart> -->
  </view>
  <!-- <button open-type="getUserInfo" type="default" bindgetuserinfo="getUserInfo" >测试</button>
  <button open-type="getPhoneNumber" type="default" bindgetphonenumber="getPhoneNumber" >测试</button> -->
  <view>
    <shop-cart brandId="{{brandId}}" deliveryThreshold="{{deliveryThreshold}}" openShop="{{openShop}}"></shop-cart>
    <!-- <view class="toolbar">
      <view class="content-left">
        <view class="logo-wapper">
          <view class="logo">
            <image src="../assets/image/icon/iCON_goujiuche.png" />
            <view class="tip">1</view>
          </view>
        </view>
        <view class="price">
          ￥ <text class="num">198</text> 满200起送
        </view>
      </view>
      <view class="content-right">
        <button>确认订单</button>
      </view>
    </view> -->
  </view>
  <!-- <food @add="addFood" :food="selectedFood" ref="food"></food> -->
</view>
</template>

<script>
  import { addDays } from 'date-fns';
  import store from '../store/index'
  import { createPage } from '@mpxjs/core'
  import wxRequest from '../utils/request'
  const LONG_PRESS_START_TIME = 600;
  createPage({
    data: {
      id: '',
      listShow: true,
      statusBarHeight: getApp().globalData.statusBarHeight,
      screenHeight: getApp().globalData.screenHeight,
      scrollheight: 0,
      currentIndex: 0,
      scrollHeight: 600,
      list: [],
      goods: [],
      nameId: '',
      listHeight: [],
      scrollY: 0,
      selectedFood: {},
      first: true,
      brandId: '',
      openShop: true,
      deliveryThreshold: 0,
      shopName: '',
      objList: {},
      keyId: ''
    },
    computed: {
      ...store.mapState(['foodList']),
      selectFoods() {
        let foods =  [];
        Object.keys(this.objList).forEach(i => {
            this.objList[i].forEach(item => {
              if (item.count > 0) foods.push(item)
            })
          }
        )
        return foods;
      },
    },
    watch: {
      foodList(value, old) {
        console.log(value)
        const arr = value[this.brandId].map(i => i.id)
        Object.keys(this.objList).forEach(i => {
            this.objList[i].forEach(item => {
              console.log(arr.includes(item.id))
              if (arr.includes(item.id)) {
                item.count = value[this.brandId].find(i => i.id == item.id).count
              } else {
                item.count = 0
              }
            })
          }
        )
        this.setData({objList: this.objList})
      }
    },
    onLoad(options) {
      this.brandId = options.id
      const myDate = new Date();
      const day = `${myDate.getFullYear()}/${myDate.getMonth()+1}/${myDate.getDate()}`
      const hms = `${myDate.getHours() < 10 ? "0" + myDate.getHours() : myDate.getHours()}:${myDate.getMinutes() < 10 ? "0" + myDate.getMinutes() : myDate.getMinutes()}:${myDate.getSeconds() < 10 ? "0" + myDate.getSeconds() : myDate.getSeconds()}`
      const time = new Date(`${day} ${hms}`).getTime()
      const beginDate = new Date(`${day} ${options.openTime}`).getTime();
      let endDate = new Date(`${day} ${options.closeTime}`).getTime();
      if (new Date(`${day} ${options.closeTime}`).getTime() < new Date(`${day} ${options.openTime}`).getTime()) {
        endDate = addDays(new Date(`${day} ${options.closeTime}`), 1).getTime();
      }
      if (time >= beginDate && time <= endDate) {
        this.setData({openShop: true})
      } else {
        this.setData({openShop: false})
      }
      store.commit('setShopName', {name: options.name})
      this.setData({id: options.id, shopName: options.name, deliveryThreshold: options.deliveryThreshold, scrollheight: this.screenHeight - this.statusBarHeight - 100})
      this.getList();
    },
    onTouchStart(event) {
      clearTimeout(this.longPressTimer);
      this.isLongPress = false;
      this.longPressTimer = setTimeout(() => {
          this.isLongPress = true;
      }, LONG_PRESS_START_TIME);
    },
    onTouchEnd() {
      clearTimeout(this.longPressTimer);
    },
    add(index) {
      this.objList[this.keyId][index].count =  this.objList[this.keyId][index].count + 1
      console.log(this.objList[this.keyId][index])
      this.setData({objList: this.objList})
      console.log(this.selectFoods)
      this.foodList[this.brandId] = this.selectFoods
      store.commit('setMember', {list: this.foodList})
    },
    del(index) {
      if (this.objList[this.keyId][index].count == 0) return 
      this.objList[this.keyId][index].count =  this.objList[this.keyId][index].count - 1
      this.setData({objList: this.objList})
      this.foodList[this.brandId] = this.selectFoods
      store.commit('setMember', {list: this.foodList})
    },
    getList: async function() {
      const json = await wxRequest(`${wx.url}/wx/product/api/sortList`,{
        method: "FORM",
        query: { brandId: this.brandId }
      })
      if (json.returnCode == 'SUCCESS') {
        this.setData({list: json.returnData})
        if (json.returnData && json.returnData.length > 0) {
           this.selectMenu(json.returnData[0], 0)
        }
      }
    },
    selectMenu: async function(item, index) {
      this.setData({currentIndex: index})
      if (this.objList[item.id]) {
        this.setData({keyId: item.id})
      } else {
        // const foods = this.foodList[this.brandId] ? [...this.foodList[this.brandId]] : [];
        wx.showLoading({title: '加载中', mask: true})
        const json = await wxRequest(`${wx.url}/wx/product/api/findProList?brandId=${this.brandId}&sortId=${item.id}`,{method: "FORM"})
        if (json.returnCode == 'SUCCESS') {
          json.returnData.forEach(v => {
            v.count = 0 // foods.map(i =>i.id).includes(v.id) ? foods.find(i=>i.id == v.id).count  : 0,
            v.productTypeId = item.id,
            v.productType = item.name
          })
          this.objList[item.id] = json.returnData
          this.setData({objList: this.objList, keyId: item.id})
        }
        wx.hideLoading()
      }
      
    },
    getPhoneNumber: async function (params) {
      console.log(params)
      const json = await wxRequest(`${wx.url}/wx/user/api/bindPhone`, {
        method: 'FORM',
        query: {
          sessionKey: wx.getStorageSync('sessionkey'),
          openId: wx.getStorageSync('openid'),
          encryptedData: params.detail.encryptedData,
          iv: params.detail.iv
        }
      })

    },
    getUserInfo: async function (res) {
      const json = await wxRequest(`${wx.url}/wx/user/api/login`, {
        method: 'FORM',
        query: {
          ...res.detail.userInfo,
          openId: wx.getStorageSync('openid')
        }
      })
      console.log(res)
    },
  })
</script>
<style lang="less">
.goods {
  box-sizing: border-box;
  display: flex;
  width: 100%;
  overflow: hidden;
  padding: 20rpx;
  // position: absolute;
  // height: 600px;
  top: 56px;
  bottom: 126px;
  .menu-wrapper-w {
    flex: 0 0 184rpx;
    width: 184rpx;
  }
  .menu-wrapper {
    margin-right: auto;
    margin-left: auto;
    flex: 0 0 152rpx;
    width: 152rpx;
    min-height: 100%;
    border-radius: 32rpx !important;
    border:4rpx solid;
    border-image:linear-gradient(180deg, rgba(255,255,255,0.9), rgba(196,182,255,0)) 4 4;
    .menu-item {
      display: table;
      width:152rpx;
      opacity:0.97;
      margin: 38rpx 0rpx;
      text-align: center;
      font-family:PingFang-SC-Medium,PingFang-SC;
      font-weight:500;
      color:#A0A0A0;
      font-size: 24rpx;
      display: -webkit-box;
      overflow: hidden;
      text-overflow: ellipsis;
      word-wrap: break-word;
      white-space: normal !important;
      -webkit-line-clamp: 1;
      -webkit-box-orient: vertical;
      .text {
        display: flex;
        flex-direction: column;
        justify-content: center;
        // align-items: center;
        height: 100%;
        min-height: 108rpx;
      }
      .enName {
        color:#272727;
      }
      &.current {
        position: relative;
        color:rgba(0,0,0,1);
        z-index: 10;
        background:#BCBCBC;
        border-radius:16rpx;
        opacity:0.97;
        left: -14rpx;
        border-left: 14rpx solid rgba(188,188,188,1);
        border-right: 14rpx solid rgba(188,188,188,1);
        .text {
          border: none;
        }
        .enName {
         color:#272727;
        }
      }
      .short {
        
      }
    }
  }
}


.foods-wrapper {
  flex: 1;
  margin-left: 24rpx;
  .food-list {
    .title {
      padding-left: 14px;
      height: 26px;
      line-height: 26px;
      border-left: 2px solid #d9dde1;
      font-size: 12px;
      color: #93999f;
      background: #f3f5f7;
    }
    .food-item {
      box-sizing: border-box;
      display: flex;
      align-items: center;
      width:544rpx;
      height:176rpx;
      background:rgba(0,0,0,1);
      border-radius:16rpx;
      background: rgba(0,0,0,0.5);
      margin-bottom: 32rpx;
      padding: 16rpx;
      .icon {
        image {
          width: 144rpx;
          height: 144rpx;
          background:rgba(0,0,0,1);
          border-radius:16rpx;
          border:6rpx solid rgba(183,183,183,1);
          margin-right: 24rpx;
        }
      }
      .content {
        flex: 1;
        .name {
          height:36rpx;
          font-size:26rpx;
          font-weight:600;
          color:rgba(255,255,255,0.7);
          line-height:36rpx;
        }
        .desc{
          height:32rpx;
          font-size:22rpx;
          font-weight:500;
          color:#565656;
          line-height:32rpx;
          margin-bottom: 24rpx;
        }
        .price {
          display: flex;
          justify-content: space-between;
          align-items: center;
          font-size:34rpx;
          font-family:DINAlternate-Bold,DINAlternate;
          font-weight:bold;
          color:rgba(160,160,160,1);
          .cartcontrol-wrapper {
            margin: 0 24rpx;
            flex: 0 0 45%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size:28rpx;
            color: #A0A0A0;
            image {
              width:38rpx;
              height:38rpx;
            }
          }
        }
      }
    }
  }
}

</style>
<script type="application/json">
  {
    "usingComponents": {
      "shop-cart": "../components/shopcart"
    }
  }
</script>

