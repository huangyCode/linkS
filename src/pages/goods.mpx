<template>
<view>
  <nav-bar title="ACL" />
  <view class="goods" style="top: {{statusBarHeight}}">
    <scroll-view scroll-y scroll-with-animation class="menu-wrapper" id="menuWrapper" scroll-into-view="box{{currentIndex}}">
      <view wx:for="{{goods}}" wx:key="index" class="menu-item {{currentIndex===index ? 'current' : ''}}" bind:tap="selectMenu(index)">
        <text class="text border-1px" id="box{{index}}">
          {{item.name}}
        </text>
      </view>
    </scroll-view>
    <scroll-view scroll-y scroll-with-animation bindscroll="scrollChange" class="foods-wrapper" id="foodsWrapper" scroll-into-view="{{nameId}}">
      <view wx:for="{{goods}}" class="food-list" id="id{{index}}">
        <view class="title">{{item.name}}</view>
        <view>
          <view bind:tap="selectFood(food,$event)" wx:for="{{item.foods}}" class="food-item border-1px">
            <view class="icon">
              <image width="57" height="57" src="{{item.icon}}" />
            </view>
            <view class="content">
              <view class="name">{{item.name}}</view>
              <view class="desc">THE balvenie</view>
              <view class="price">199</view>
              <div class="cartcontrol-wrapper">
                <!-- <cartcontrol @add="addFood" :food="food"></cartcontrol> -->
              </div>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>
    <!-- <shopcart ref="shopcart" :selectFoods="selectFoods" :deliveryPrice="seller.deliveryPrice"
              :minPrice="seller.minPrice"></shopcart> -->
  </view>
  <!-- <food @add="addFood" :food="selectedFood" ref="food"></food> -->
</view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  const response = require('../assets/goods.json')
  createPage({
    data: {
      statusBarHeight: getApp().globalData.statusBarHeight,
      currentIndex: 0,
      scrollHeight: 0,
      goods: [],
      nameId: '',
      listHeight: [],
      scrollY: 0,
      selectedFood: {}
    },
    computed: {
      selectFoods() {
        let foods = [];
        this.goods.forEach((good) => {
          good.foods.forEach((food) => {
            if (food.count) {
              foods.push(food);
            }
          });
        });
        return foods;
      }
    },
    onLoad() {
      this.classMap = ['decrease', 'discount', 'special', 'invoice', 'guarantee'];
      if (response.errno === 0) {
        this.setData({goods: response.data}, () => {
          this._calculateHeight();
        });
        // this.$nextTick(() => {
        //   this._initScroll();
         
        // });
      }
    },
    selectMenu(index) {
      this.setData({nameId: `id${index}`, currentIndex: index})
    },
    scrollChange(e) {
      console.log(e)
      this.setData({scrollHeight: e.detail.scrollTop}, ()=> {
        for (let i = 0; i < this.listHeight.length; i++) {
          let height1 = this.listHeight[i];
          let height2 = this.listHeight[i + 1];
          console.log(height1, height2, this.scrollHeight)
          if (!height2 || (this.scrollHeight >= height1 && this.scrollHeight < height2)) {
              console.log(i)
             this.setData({currentIndex: i})
             return
          }
        }
      })
    },
    // selectFood(food, event) {
    //   if (!event._constructed) {
    //     return;
    //   }
    //   this.selectedFood = food;
    //   this.$refs.food.show();
    // },
    // addFood(target) {
    //   this._drop(target);
    // },
    // _drop(target) {
    //   // 体验优化,异步执行下落动画
    //   this.$nextTick(() => {
    //     this.$refs.shopcart.drop(target);
    //   });
    // },
    // _initScroll() {
    //   this.meunScroll = new BScroll(this.$refs.menuWrapper, {
    //     click: true
    //   });

    //   this.foodsScroll = new BScroll(this.$refs.foodsWrapper, {
    //     click: true,
    //     probeType: 3
    //   });

    //   this.foodsScroll.on('scroll', (pos) => {
    //     this.scrollY = Math.abs(Math.round(pos.y));
    //   });
    // },
    _calculateHeight() {
      const query = wx.createSelectorQuery()    // 创建节点查询器 query
      this.goods.map((item, index)=> {
        console.log()
        query.select(`#id${index}`).boundingClientRect() 
      })            
      // query.selectViewport().scrollOffset()                 // 这段代码的意思是获取页面滑动位置的查询请求
      query.exec((res) => {
        console.log(res) 
        let height = 0;
        this.listHeight.push(height);
        for (let i = 0; i < res.length; i++) {
          let item = res[i];
          height += item.height;
          this.listHeight.push(height);
        }
        this.setData({listHeight: this.listHeight})                                 
      })
    }
  })
</script>
<style lang="less">
.goods {
  box-sizing: border-box;
  display: flex;
  width: 100%;
  overflow: hidden;
  padding: 20rpx;
  position: absolute;
  top: 56px;
  bottom: 126px;
  .menu-wrapper {
    flex: 0 0 152rpx;
    width: 152rpx;
    border-radius: 16rpx;
    border:4rpx solid;
    border-image:linear-gradient(180deg, rgba(255,255,255,1), rgba(196,182,255,0)) 4 4;
    .menu-item {
      display: table;
      width:152rpx;
      height:108rpx;
      opacity:0.97;
      margin: 38rpx 0rpx;
      text-align: center;
      font-family:PingFang-SC-Medium,PingFang-SC;
      font-weight:500;
      color:rgba(255,255,255,1);
      font-size: 24rpx;
      &.current {
        position: relative;
        color:rgba(0,0,0,1);
        z-index: 10;
        background:rgba(188,188,188,1);
        border-radius:16rpx;
        opacity:0.97;
        left: -14rpx;
        border-left: 14rpx solid rgba(188,188,188,1);
        border-right: 14rpx solid rgba(188,188,188,1);
        .text {
          border: none;
        }
      }    
    }  
  }     
}


.foods-wrapper {
  flex: 1;
  margin-left: 24rpx;
  .food-list {
    .title {
      padding-left: 14px;
      height: 26px;
      line-height: 26px;
      border-left: 2px solid #d9dde1;
      font-size: 12px;
      color: #93999f;
      background: #f3f5f7;
    }
    .food-item {
      display: flex;
      align-items: center;
      width:544rpx;
      height:176rpx;
      background:rgba(0,0,0,1);
      border-radius:16rpx;
      background: rgba(0,0,0,0.5);
      margin-bottom: 32rpx;
      padding: 16rpx;
      .icon {
        image {
          width: 144rpx;
          height: 144rpx;
          background:rgba(0,0,0,1);
          border-radius:16rpx;
          border:6rpx solid rgba(183,183,183,1);
          margin-right: 24rpx;
        }
      }
      .content {
        .name {
          font-size:26rpx;
          font-family:PingFangSC-Medium,PingFang SC;
          font-weight:600;
          color:rgba(255,255,255,1);
        }
        .desc{
          font-size:22rpx;
          font-family:PingFang-SC-Medium,PingFang-SC;
          font-weight:500;
          color:rgba(255,255,255,1);
          margin-bottom: 24rpx;
        }
        .price {
          font-size:34rpx;
          font-family:DINAlternate-Bold,DINAlternate;
          font-weight:bold;
          color:rgba(160,160,160,1)
        }
      }
    }
  }
}

   
    
</style>
